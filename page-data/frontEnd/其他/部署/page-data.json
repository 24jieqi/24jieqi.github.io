{"componentChunkName":"component---src-templates-blog-post-js","path":"/frontEnd/其他/部署/","result":{"data":{"site":{"siteMetadata":{"title":"HJGP技术知识库"}},"markdownRemark":{"id":"9556dd71-f881-5b97-a7b4-9bbee09d0fa2","excerpt":"基础概念 部署 使用  打包项目（不同的项目，不同环境打包命令可能不一样，比如打包测试环境的包有的项目是  ，具体查看 ）,打包完成你会得到一个静态资源文件夹，一般叫  或者  将打包好的前端后台文件放在服务器里的 web 目录下 jenkins 百度百科解释\nJenkins 功能包括：…","html":"<h2>基础概念</h2>\n<h3>部署</h3>\n<ol>\n<li>使用 <code class=\"language-text\">yarn build</code> 打包项目（不同的项目，不同环境打包命令可能不一样，比如打包测试环境的包有的项目是 <code class=\"language-text\">yarn test</code> ，具体查看 <code class=\"language-text\">package.json</code>）,打包完成你会得到一个静态资源文件夹，一般叫 <code class=\"language-text\">dist</code> 或者 <code class=\"language-text\">build</code></li>\n<li>将打包好的前端后台文件放在服务器里的 web 目录下</li>\n</ol>\n<h3>jenkins</h3>\n<p>百度百科解释\nJenkins 功能包括：\n1、持续的软件版本发布/测试项目。\n2、监控外部调用执行的工作</p>\n<p>可以理解为你有了一个 web 界面直观的供你执行打包部署过程</p>\n<p>具体配置\n在我们这里可以理解为有两个部分组成，详细配置较多，下面都会以复制现有项目的形式展开</p>\n<p>第一个部分：Jenkins 界面配置项目</p>\n<ol>\n<li>新建一个项目</li>\n</ol>\n<p><img src=\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0iekgkymdj208x0fct91.jpg\" alt=\"image-20220322092848220\"></p>\n<ol start=\"2\">\n<li>每个 web 项目大概配置除了 git 地址不一样之外其他基本一样，选择下面的 copy from，从其他 web 项目复制一个配置过来，这里不做细讲具体的</li>\n</ol>\n<p><img src=\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0ieljbbdoj215l0m6q5r.jpg\" alt=\"image-20220322092952837\"></p>\n<ol start=\"3\">\n<li>配置从其他项目复制过来，只需要修改两个配置，如下：</li>\n</ol>\n<p><img src=\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0ieu57l08j218n0lqq51.jpg\" alt=\"image-20220322093809091\"></p>\n<p>以上在界面上的配置完成</p>\n<p>第二个部分：script 部分</p>\n<ol>\n<li>\n<p>复制现有项目 script 目录</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0ifagcwc4j20cg07i74d.jpg\" alt=\"image-20220322095349681\"></p>\n</li>\n<li>\n<p>修改对应环境的 Jenkinsfile，不同的环境对应的不同的 Jenkinsfile</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0iez0osofj20s90kp40d.jpg\" alt=\"image-20220322094249901\"></p>\n</li>\n</ol>\n<p>流程：</p>\n<ol>\n<li>当你点击 jenkins 界面中的 <code class=\"language-text\">build now</code></li>\n<li>会从你刚刚配置的 git 地址中拉取代码</li>\n<li>从拉取到的代码中执行 <code class=\"language-text\">Jenkinsfile</code> 中的脚本，打包、把打包好的文件移动到 web 目录下</li>\n</ol>\n<p>至此 jenkins 工作完成</p>\n<h3>nginx</h3>\n<p>百度百科：Nginx (engine x) 是一个高性能的 HTTP 和反向代理 web 服务器</p>\n<p>比如你本机 ip 为 192.168.10.233，你之前打包的项目资源已经放在了 web 目录下，你想要通过访问 192.168.10.233:3000 来访问 web 目录的网页，就可以通过配置 nginx 做到</p>\n<p>下面是 nginx 的简单配置</p>\n<p><img src=\"https://tva1.sinaimg.cn/large/e6c9d24ely1h0ifykdda4j20fw0jowh5.jpg\" alt=\"image-20220322101659984\"></p>\n<h2>部署说明</h2>\n<p>因为也是在尝试哪一种部署方案更好，所以在 <code class=\"language-text\">开发环境服务器</code> ，<code class=\"language-text\">测试服务器</code> 部署了两套方案</p>\n<h3>开发环境</h3>\n<p>对应方案 <a href=\"https://qiankun.umijs.org/zh/cookbook#%E5%9C%BA%E6%99%AF-1%E4%B8%BB%E5%BA%94%E7%94%A8%E5%92%8C%E5%BE%AE%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8C%E4%B8%80%E4%B8%AA-ip-%E5%92%8C%E7%AB%AF%E5%8F%A3\">qiankun 部署方案介绍</a> 中的 <code class=\"language-text\">场景 2</code></p>\n<p>某一个 web 项目的 nginx 配置</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n    server_name  operation-dev.local;\n    listen 3005;\n\n    if ($http_x_forwarded_proto = '') {\n        set $http_x_forwarded_proto  $scheme;\n    }\n\n    ## Application specific logs\n    ## access_log /var/log/nginx/yourdomain.com-access.log timing;\n    ## error_log /data/local/etc/nginx/log/dev-error.log;\n\n    proxy_next_upstream error timeout non_idempotent;\n    proxy_next_upstream_tries    1;\n    proxy_http_version         1.1;\n    proxy_set_header    X-Forwarded-Port  $server_port;\n    proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;\n    proxy_set_header    Host              $http_host;\n    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_connect_timeout      90;\n    proxy_send_timeout         90;\n    proxy_read_timeout         90;\n\n    #this is the maximum upload size\n    client_max_body_size       10m;\n    client_body_buffer_size    128k;\n\n    root /data/app/web/operation-admin-web_dev/dist;\n\n    location / {\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';\n        add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';\n        expires 1m;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    location /_files {\n        proxy_send_timeout         180;\n        proxy_read_timeout         180;\n        proxy_request_buffering    off;\n        client_max_body_size       60m;\n        proxy_pass http://dev-001:9193;\n    }\n    location /auth {\n        proxy_pass  http://dev-001:9433;\n    }\n    location /operation/graphql {\n        proxy_pass http://dev-001:8888/graphql;\n    }\n\n    location /operation/graphiql {\n        proxy_pass http://dev-001:8888/graphiql;\n    }\n\n    location /operation/playground {\n        proxy_pass http://dev-001:8888/playground;\n    }\n\n}</code></pre></div>\n<p>开发环境文件目录结构</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── fc-console-web_dev\n│   └── dist\n│       ├── asset-manifest.json\n│       ├── favicon.ico\n│       ├── index.html\n│       ├── robots.txt\n│       └── static\n├── fc-container-web_dev\n│   └── dist\n│       ├── asset-manifest.json\n│       ├── favicon.ico\n│       ├── index.html\n│       ├── robots.txt\n│       └── static\n├── fc-customs-web_dev\n│   └── dist\n│       ├── asset-manifest.json\n│       ├── favicon.ico\n│       ├── index.html\n│       ├── robots.txt\n│       └── static\n├── fc-transport-web_dev\n│   └── dist\n│       ├── asset-manifest.json\n│       ├── favicon.ico\n│       ├── index.html\n│       ├── robots.txt\n│       └── static\n├── gscm-admin-web_dev\n│   ├── dist\n│   │   ├── asset-manifest.json\n│   │   ├── css\n│   │   ├── explain.pdf\n│   │   ├── index.html\n│   │   ├── robots.txt\n│   │   └── static\n│   └── dist-20210805111127.tar.bz2\n├── huanglong-auth-web_dev\n│   └── dist\n│       ├── 404.html\n│       ├── forget-password\n│       ├── images\n│       ├── _next\n│       ├── oauth.html\n│       └── performance.html\n├── operation-admin-web_dev\n│   └── dist\n│       ├── asset-manifest.json\n│       ├── favicon.ico\n│       ├── index.html\n│       ├── robots.txt\n│       └── static\n├── peach-admin-web_dev\n│   ├── dist\n│   │   ├── asset-manifest.json\n│   │   ├── index.html\n│   │   ├── robots.txt\n│   │   └── static\n│   ├── dist-20210805104321.tar.bz2\n│   └── dist-20210805104456.tar.bz2\n└── pitaya-web_dev\n    └── dist\n        ├── asset-manifest.json\n        ├── favicon.ico\n        ├── index.html\n        ├── robots.txt\n        └── static</code></pre></div>\n<h3>测试环境</h3>\n<p>对应方案 <a href=\"https://qiankun.umijs.org/zh/cookbook#%E5%9C%BA%E6%99%AF-1%E4%B8%BB%E5%BA%94%E7%94%A8%E5%92%8C%E5%BE%AE%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8C%E4%B8%80%E4%B8%AA-ip-%E5%92%8C%E7%AB%AF%E5%8F%A3\">qiankun 部署方案介绍</a> 中的 <code class=\"language-text\">场景 1 -> 方案 1</code></p>\n<p>测试环境使用的方案 2，只有一个 host，所以 nginx 配置只有以下一个</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">server {\n    server_name  boss-test.hjgpscm.com;\n\n    if ($http_x_forwarded_proto = '') {\n        set $http_x_forwarded_proto  $scheme;\n    }\n\n    ## Application specific logs\n    ## access_log /var/log/nginx/yourdomain.com-access.log timing;\n    ## error_log /var/log/nginx/yourdomain.com-error.log;\n\n    proxy_next_upstream error timeout non_idempotent;\n    proxy_next_upstream_tries    1;\n    proxy_http_version         1.1;\n    proxy_set_header    X-Forwarded-Port  $server_port;\n    proxy_set_header    X-Forwarded-Proto $http_x_forwarded_proto;\n    proxy_set_header    Host              $http_host;\n    proxy_set_header    X-Forwarded-For   $proxy_add_x_forwarded_for;\n    proxy_connect_timeout      90;\n    proxy_send_timeout         90;\n    proxy_read_timeout         90;\n    proxy_buffering            off;\n\n    #this is the maximum upload size\n    client_max_body_size       10m;\n    client_body_buffer_size    128k;\n\n\n    location /pitaya_web {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        alias /data/app/web/boss-web_test/pitaya_web;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n\n    location /operation_web {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        root /data/app/web/boss-web_test;\n        index index.html;\n        try_files $uri $uri/ /operation_web/index.html;\n    }\n    location /peach_web {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        alias /data/app/web/boss-web_test/peach_web;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n    location /container_web {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        alias /data/app/web/boss-web_test/container_web;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n    location /customs_web {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        alias /data/app/web/boss-web_test/customs_web;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n    location /transport_web {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        alias /data/app/web/boss-web_test/transport_web;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n    location / {\n        if ($request_filename ~* .*\\.(?:htm|html)$) {\n            add_header Cache-Control \"private, no-store, no-cache, must-revalidate, proxy-revalidate\";\n        }\n        root /data/app/web/boss-web_test/dist;\n        index index.html;\n        try_files $uri $uri/ /index.html;\n    }\n    location /_files {\n        proxy_send_timeout         180;\n        proxy_read_timeout         180;\n        proxy_request_buffering    off;\n        client_max_body_size       60m;\n        proxy_pass http://dev-002:9193;\n    }\n\n    location /pitaya/graphql-web {\n        proxy_pass  http://dev-002:9409/graphql-web;\n    }\n    location /operation/graphql {\n        proxy_pass  http://dev-002:8888/graphql;\n    }\n    location /auth {\n        proxy_pass  http://dev-002:9433;\n    }\n\n\n\n    listen 443 ssl; # managed by Certbot\n    ssl_certificate /etc/letsencrypt/live/auth.hjgpscm.com-0002/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/auth.hjgpscm.com-0002/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot\n\n\n}\nserver {\n    if ($host = boss-test.hjgpscm.com) {\n        return 301 https://$host$request_uri;\n    } # managed by Certbot\n\n\n    server_name  boss-test.hjgpscm.com;\n    listen 80;\n    return 404; # managed by Certbot\n\n\n}\n</code></pre></div>\n<p>测试服务器文件目录结构以下都是放在 <code class=\"language-text\">boss-web_test</code> 目录下</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── container_web\n│   ├── asset-manifest.json\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── robots.txt\n│   └── static\n├── customs_web\n│   ├── asset-manifest.json\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── robots.txt\n│   └── static\n├── dist\n│   ├── asset-manifest.json\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── robots.txt\n│   └── static\n├── operation_web\n│   ├── asset-manifest.json\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── robots.txt\n│   └── static\n├── peach_web\n│   ├── asset-manifest.json\n│   ├── index.html\n│   ├── robots.txt\n│   └── static\n├── pitaya_web\n│   ├── asset-manifest.json\n│   ├── favicon.ico\n│   ├── index.html\n│   ├── robots.txt\n│   └── static\n└── transport_web\n    ├── asset-manifest.json\n    ├── favicon.ico\n    ├── index.html\n    ├── robots.txt\n    └── static</code></pre></div>\n<p>以上是部署相关知识，关于基座如何加载的子应用请移步去了解微前端相关知识</p>","frontmatter":{"title":"项目部署","date":"2022-03-22","description":null,"author":"Ming"}},"previous":{"fields":{"slug":"/frontEnd/其他/fastAdmin/"},"frontmatter":{"title":"洪九官网 项目环境安装流程"}},"next":{"fields":{"slug":"/frontEnd/css/CSS 知识点/"},"frontmatter":{"title":"CSS 知识点"}}},"pageContext":{"id":"9556dd71-f881-5b97-a7b4-9bbee09d0fa2","previousPostId":"c0f92d39-7465-5f06-bcd2-e372889c74d3","nextPostId":"489c640a-40c1-5fd8-8790-8b4178305a1b"}},"staticQueryHashes":["2841359383","3257411868"]}