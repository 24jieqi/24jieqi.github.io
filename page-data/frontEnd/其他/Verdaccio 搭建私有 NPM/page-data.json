{"componentChunkName":"component---src-templates-blog-post-js","path":"/frontEnd/其他/Verdaccio 搭建私有 NPM/","result":{"data":{"site":{"siteMetadata":{"title":"HJGP技术知识库"}},"markdownRemark":{"id":"1a9b890e-4472-5aa2-99ad-e6ab4a09dfee","excerpt":"sinopia 在 15 年的时候就停止更新了，继而由 verdaccio 提供更新升级，所以两者用法基本上都是一致的。 安装 config.yaml 配置文件，需要在代码结尾添加 ，默认使用 ，只能在本机访问，无法局域网访问。 如果需要更改  源，可以在  中把  的  改成 。 其他： storage…","html":"<blockquote>\n<p><a href=\"https://github.com/rlidwka/sinopia\">sinopia</a> 在 15 年的时候就停止更新了，继而由 <a href=\"https://github.com/verdaccio/verdaccio\">verdaccio</a> 提供更新升级，所以两者用法基本上都是一致的。</p>\n</blockquote>\n<h2>安装</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## 全局安装</span>\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> verdaccio\n\n<span class=\"token comment\">## 初始化</span>\n<span class=\"token comment\">## 初始化完成后会在根目录 `.config/verdaccio` 生成 `config.yaml`、`htpasswd`</span>\nverdaccio</code></pre></div>\n<h3>config.yaml</h3>\n<p>配置文件，需要在代码结尾添加 <code class=\"language-text\">listen: 0.0.0.0:4873</code>，默认使用 <code class=\"language-text\">localhost:4873</code>，只能在本机访问，无法局域网访问。</p>\n<p>如果需要更改 <code class=\"language-text\">npm</code> 源，可以在 <code class=\"language-text\">uplinks</code> 中把 <code class=\"language-text\">npmjs</code> 的 <code class=\"language-text\">url</code> 改成 <code class=\"language-text\">http://registry.npm.taobao.org/</code>。</p>\n<blockquote>\n<p>其他：</p>\n<p>storage: ./storage # 所有包的缓存目录</p>\n<p>plugins: ./plugins # 插件目录</p>\n<p>file: ./htpasswd # 用户信息存储目录</p>\n</blockquote>\n<h3>htpasswd</h3>\n<p>这个文件可能不会生成，自己新建一个就好了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"\"</span> <span class=\"token operator\">></span> htpasswd</code></pre></div>\n<h4>注册用户</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## 安装工具\nnpm install htpasswd-for-sinopia -g\n\n## 进入 `.config/verdaccio` 文件夹\nsinopia-adduser\n\n## 根据提示新增用户\n## 在 npm adduser 的时候回提示使用小写字母，但是如果是大写字母注册的可以使用全小写字母登录，库里会有两个数据，有点奇怪。</code></pre></div>\n<h2>启动服务</h2>\n<p>一般情况大家都推荐使用 <code class=\"language-text\">pm2</code> 启动服务，但是我这边尝试的时候发现 <code class=\"language-text\">pm2</code> 的错误日志一直提示 <code class=\"language-text\">The fs.promises API is experimental</code>，服务器上的 <code class=\"language-text\">node</code> 版本是 <code class=\"language-text\">v10.16.3</code>，符合 <code class=\"language-text\">verdaccio</code> 最低需求。</p>\n<p>后来使用 <code class=\"language-text\">nohup</code> 的方式启动服务就正常了。</p>\n<h2>使用</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">## 修改 npm 源\nnpm set registry https://www.onlyling.com:4873\n\n## 添加用户\nnpm adduser --registry https://www.onlyling.com:4873\n\n## 发布库/模块\nnpm publish --registry https://www.onlyling.com:4873\n\n## 安装模块\nyarn @your-scope/module-name</code></pre></div>","frontmatter":{"title":"Verdaccio 搭建私有 NPM","date":"2021-11-03","description":null,"author":"onlyling"}},"previous":{"fields":{"slug":"/frontEnd/其他/TypeScript 环境使用 egg-jwt/"},"frontmatter":{"title":"TypeScript 环境使用 egg-jwt"}},"next":{"fields":{"slug":"/frontEnd/其他/从零开始配置 Nginx + HTTPS/"},"frontmatter":{"title":"从零开始配置 Nginx + HTTPS"}}},"pageContext":{"id":"1a9b890e-4472-5aa2-99ad-e6ab4a09dfee","previousPostId":"84c9756f-209a-5da2-b819-47812550d3f8","nextPostId":"1c0b1030-0bb2-5770-a4d4-d8d708c8e667"}},"staticQueryHashes":["2841359383","3257411868"]}