{"componentChunkName":"component---src-templates-blog-post-js","path":"/frontEnd/其他/Gatsby/","result":{"data":{"site":{"siteMetadata":{"title":"HJGP技术知识库"}},"markdownRemark":{"id":"4b111c0c-c9b6-5dae-95b3-3f1414abd558","excerpt":"学习文档：\nhttps://www.gatsbyjs.com/docs\n\n\n​ 一、Gatsby 概念 ​ Gatsby 是一个基于 React ，用于搭建静态站点的开源框架，用于帮助 开发者构建运行速度极快的网站。可以说它是一个静态站点生成器，Gatsby 主要的应用的技术是 React 和 GraphQL…","html":"<p>学习文档：\n<a href=\"https://www.gatsbyjs.com/docs\">https://www.gatsbyjs.com/docs</a>\n<a href=\"https://mygatsbymain27660.gatsbyjs.io/\">\n</a>\n​</p>\n<h2>一、Gatsby 概念</h2>\n<p>​</p>\n<p>Gatsby 是一个基于 React ，用于搭建静态站点的开源框架，用于帮助 开发者构建运行速度极快的网站。可以说它是一个静态站点生成器，Gatsby 主要的应用的技术是 React 和 GraphQL。\n​</p>\n<p>gatsby 带来了完全的 react 生态圈——你可以使用几乎全部的 react 生态圈内容。提供了大量的初始模板和主题，官方也有提供插件的形式让网站开发更快捷，gatsby 作为一个框架，能提供大量主题、插件和模板。\n​</p>\n<p>工作原理：\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/25568957/1640238914662-698ce1fe-3fa8-4a23-8d97-029dbfc5ed54.png#clientId=uca88d7a9-240d-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=478&#x26;id=u05f4340c&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=478&#x26;originWidth=820&#x26;originalType=binary&#x26;ratio=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=170677&#x26;status=done&#x26;style=none&#x26;taskId=ue75efb83-4aad-4055-9fec-e4de0a73a4e&#x26;title=&#x26;width=820\" alt=\"image.png\">\n​</p>\n<h2>二、简单使用</h2>\n<p>1、全局安装 Gatsby CLI 工具</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g gatsby-cli</code></pre></div>\n<p>2、创建站点</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gatsby new</code></pre></div>\n<p>3、运行项目</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd gatsby-blog-demo\ngatsby develop</code></pre></div>\n<h2>三、常用命令</h2>\n<ul>\n<li>gastby develop：开启热加载开发环境</li>\n<li>gastby build：打包到 public 下，构建生产环境用的优化过的静态网站所需的一切静态资源、静态页面与 js 代码</li>\n<li>gatsby serve：在打包之后，启动一个本地的服务，供你测试刚才”gatsby build”生成的静态网页</li>\n</ul>\n<h2>四、项目结构</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── .cache\n├── public\n├── src\n|  └── pages            // 该文件夹下的文件会被映射为路由\n|     └── index.js\n├── static              // 静态资源\n├── .prettierignore\n├── .prettierrc\n├── gatsby-config.js    // 基本配置文件\n├── LICENSE\n├── package.json\n├── README.md\n└── yarn.lock\n</code></pre></div>\n<p>​</p>\n<h2>五、Gatsby 配置文件</h2>\n<p>​</p>\n<h3>gatsby-config.js</h3>\n<p>基本配置文件。整个 Gatsby 站点的配置文件。可以在里面配置网站的相关基本信息。</p>\n<h3>gatsby-node.js</h3>\n<p>node 相关配置文件。这个文件只会在 build 期间运行一次，比如动态创建一些页面。</p>\n<h3>gatsby-browser.js</h3>\n<p>客户端相关配置。一些浏览器相关的 API 通过在这个文件里去实现，比如一些监听路由变化，注册 serviceWorker 等等。</p>\n<h3>gatsby-ssr.js</h3>\n<p>服务端渲染相关配置文件。使用 Gatsby 的服务端渲染 API 自定义影响服务端渲染的默认设置。\n​</p>\n<h2>六、React 组件的运用</h2>\n<p>示例包含知识：\n1、link 标签实现跳转\n2、带子组件的组件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import * as React from 'react'\nimport { Link } from 'gatsby'\nconst Layout = ({ pageTitle, children }) => {\n  return (\n    &lt;div>\n      &lt;title>{pageTitle}&lt;/title>\n      &lt;nav>\n        &lt;ul>\n          &lt;li>&lt;Link to=\"/\">Home&lt;/Link>&lt;/li>\n          &lt;li>&lt;Link to=\"/about\">About&lt;/Link>&lt;/li>\n        &lt;/ul>\n      &lt;/nav>\n      &lt;main>\n        &lt;h1>{pageTitle}&lt;/h1>\n        {children}\n      &lt;/main>\n    &lt;/div>\n  )\n}\nexport default Layout</code></pre></div>\n<p>引用 Layout 组件：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import * as React from 'react'\nimport Layout from '../components/layout'\nconst IndexPage = () => {\n  return (\n    &lt;Layout pageTitle=\"Home Page\">\n      &lt;p>I'm making this by following the Gatsby Tutorial.&lt;/p>\n    &lt;/Layout>\n  )\n}\nexport default IndexPage</code></pre></div>\n<h2>七、使用插件添加功能</h2>\n<h3>7.1 插件概念</h3>\n<ul>\n<li>插件是一个包，可让您向站点添加新功能。</li>\n<li>使用插件可以节省您的开发时间，因为安装和配置插件比从头开始重新创建相同的功能更快。</li>\n<li>插件库链接 <a href=\"https://www.gatsbyjs.com/plugins\">https://www.gatsbyjs.com/plugins</a></li>\n<li><a href=\"https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image\">https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-plugin-image</a> 图片插件具体选项</li>\n</ul>\n<p>​</p>\n<h3>7.2 使用步骤</h3>\n<p>1、安装插件</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">yarn add plugin-name</code></pre></div>\n<p>2、在您的 gatsby-config.js 文件中配置插件。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports = {\n  siteMetadata: {\n    title: \"My First Gatsby Site\",\n  },\n  plugins: [\n    {\n      resolve: \"plugin-name\",\n      options: {\n        // Check the plugin README for what options go in here\n      }\n    },\n  ]\n}</code></pre></div>\n<p>3、导入使用</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { StaticImage } from 'gatsby-plugin-image'</code></pre></div>\n<p>​</p>\n<h2>八、使用 GraphQL 查询数据</h2>\n<p>具体学习链接： <a href=\"https://www.howtographql.com/\">https://www.howtographql.com/</a>\n​</p>\n<h3>8.1 GraphQL 基本概念</h3>\n<p>GraphQL 是一种具有特殊语法的查询语言，可让您在组件中查询所需的数据。\n​</p>\n<p><strong>Gatsby 的 GraphQL 数据层：</strong>\n数据存储在一个或多个<strong>来源中</strong>。该源可能是计算机文件系统上的文件夹、内容管理系统 (CMS)（如 WordPress）或数据库。甚至可能有多个数据源！\n如何将数据从其源获取到数据层？通过向您的站点添加一种称为<strong>源插件的插件</strong>。每个源插件都旨在与特定源进行通信。当您构建站点时，每个源插件都会从其特定源中提取数据并将其添加到站点的 GraphQL 数据层。\n​</p>\n<h3>8.2 查询流程</h3>\n<ol>\n<li>\n<p>首先在组件内部编写 GraphQL 查询语句，以提取在站点中使用的数据</p>\n</li>\n<li>\n<p>当构建站点时，Gatsby 会在组件中找到所有 GraphQL 查询，运行它们</p>\n</li>\n</ol>\n<p>​</p>\n<ol start=\"3\">\n<li>最后将对应数据放入到组件中</li>\n</ol>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2021/png/25568957/1640334270171-8c2bdf07-f50f-4ce4-a088-7226fdffd8b7.png#clientId=u2610109a-b213-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=399&#x26;id=u85ae9ea2&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=399&#x26;originWidth=650&#x26;originalType=binary&#x26;ratio=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=120692&#x26;status=done&#x26;style=none&#x26;taskId=u83f43691-2451-4a85-9923-126a2ac1998&#x26;title=&#x26;width=650\" alt=\"image.png\"></p>\n<h3>8.3 认识 GraphQL 界面</h3>\n<p><a href=\"http://localhost:8000/___graphql\">http://localhost:8000/___graphql</a>页面查看\nGraphiQL 是一个有用的工具，用于在将 GraphQL 查询添加到代码之前对其进行测试。这样，您可以确保您的查询始终以您期望的数据响应。\n<img src=\"https://cdn.nlark.com/yuque/0/2021/png/25568957/1640334816481-f6877b54-61b8-4b49-9dbb-a1b34372f3f5.png#clientId=u2610109a-b213-4&#x26;crop=0&#x26;crop=0&#x26;crop=1&#x26;crop=1&#x26;from=paste&#x26;height=551&#x26;id=u8a6d6609&#x26;margin=%5Bobject%20Object%5D&#x26;name=image.png&#x26;originHeight=551&#x26;originWidth=865&#x26;originalType=binary&#x26;ratio=1&#x26;rotation=0&#x26;showTitle=false&#x26;size=98752&#x26;status=done&#x26;style=none&#x26;taskId=uab4ea94e-3a90-4f95-baa9-508f1f1a6c9&#x26;title=&#x26;width=865\" alt=\"image.png\">\n在 site>siteMetadata(蓝色的)下拉栏数据对应于 gatsby-config.js 文件中的对象。\n​</p>\n<h2>九、 从数据层提取数据的方法</h2>\n<h3>9.1 “构建块”组件---useStaticQuery 查询</h3>\n<p>具体使用\n1、导入 useStaticQuery 和 graphql</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { Link, useStaticQuery, graphql } from 'gatsby'</code></pre></div>\n<p>2、定义变量通过 useStaticQuery 获取数据</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)</code></pre></div>\n<p>3、把包含查询结果的变量 data 运用到组件中</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  &lt;title>{pageTitle} | {data.site.siteMetadata.title}&lt;/title>\n  &lt;header>{data.site.siteMetadata.title}&lt;/header></code></pre></div>\n<h3></h3>\n<h3>9.2 页面组件----页面查询</h3>\n<p>1、导入 gatsby</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import { graphql } from 'gatsby'</code></pre></div>\n<p>2、定义并导出您的页面查询。可复制在 GraphiQL 中构建的查询。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">export const query = graphql`\n  query {\n    allFile {\n      nodes {\n        name\n      }\n    }\n  }\n`</code></pre></div>\n<p>3、函数组件接受导入的数据并使用</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const BlogPage = ({ data }) => {\n  return (\n    &lt;Layout pageTitle=\"My Blog Posts\">\n      &lt;ul>\n      {\n        data.allFile.nodes.map(node => (\n          &lt;li key={node.name}>\n            {node.name}\n          &lt;/li>\n        ))\n      }\n      &lt;/ul>\n    &lt;/Layout>\n  )\n}\n</code></pre></div>\n<p>​</p>","frontmatter":{"title":"Gatsby学习笔记","date":"2022-01-26","description":null,"author":"chang"}},"previous":{"fields":{"slug":"/frontEnd/demo/练习hooks的demo/"},"frontmatter":{"title":"导师指定已有业务或者 Hook"}},"next":{"fields":{"slug":"/frontEnd/其他/React与hooks学习/"},"frontmatter":{"title":"react学习笔记"}}},"pageContext":{"id":"4b111c0c-c9b6-5dae-95b3-3f1414abd558","previousPostId":"adff171d-f6f9-50b2-855c-6171c42046ad","nextPostId":"d1518997-e31c-5a9c-8dfe-20797a02fc9a"}},"staticQueryHashes":["2841359383","3257411868"]}