{"componentChunkName":"component---src-templates-blog-post-js","path":"/frontEnd/其他/从零开始配置 Nginx + HTTPS/","result":{"data":{"site":{"siteMetadata":{"title":"HJGP技术知识库"}},"markdownRemark":{"id":"1c0b1030-0bb2-5770-a4d4-d8d708c8e667","excerpt":"Nginx Nginx 是一款轻量级的 Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个 BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用 nginx…","html":"<h2>Nginx</h2>\n<p>Nginx 是一款轻量级的 Web 服务器/反向代理服务器及电子邮件（IMAP/POP3）代理服务器，并在一个 BSD-like 协议下发行。其特点是占有内存少，并发能力强，事实上 nginx 的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用 nginx 网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。</p>\n<h2>HTTPS</h2>\n<p>HTTPS（全称：Hyper Text Transfer Protocol over Secure Socket Layer），是以安全为目标的 HTTP 通道，简单讲是 HTTP 的安全版。即 HTTP 下加入 SSL 层，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 它是一个 URI scheme（抽象标识符体系），句法类同 http:体系。用于安全的 HTTP 数据传输。https:URL 表明它使用了 HTTP，但 HTTPS 存在不同于 HTTP 的默认端口及一个加密/身份验证层（在 HTTP 与 TCP 之间）。这个系统的最初研发由网景公司(Netscape)进行，并内置于其浏览器 Netscape Navigator 中，提供了身份验证与加密通讯方法。现在它被广泛用于万维网上安全敏感的通讯，例如交易支付方面。</p>\n<h2>安装 Nginx</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## 准备基本的东西</span>\nyum <span class=\"token function\">install</span> gcc-c++\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> pcre*\nyum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> openssl*\n\n<span class=\"token comment\">## 把下载文件、站点数据都放到 home 文件夹里面</span>\n\n<span class=\"token comment\">## 先下载 Nginx，目前最新稳定版本是1.12.2</span>\n\n<span class=\"token function\">wget</span> http://nginx.org/download/nginx-1.12.2.tar.gz\n\n<span class=\"token comment\">## 解压压缩包</span>\n<span class=\"token function\">tar</span> <span class=\"token parameter variable\">-zxvf</span> nginx-1.12.2.tar.gz\n\n<span class=\"token comment\">## 进入文件夹，准备安装</span>\n<span class=\"token builtin class-name\">cd</span> nginx-1.12.2\n\n<span class=\"token comment\">## 设置安装目录为 /usr/local/nginx</span>\n<span class=\"token comment\">## 因为要使用ssl 所以需要以下额外的模块</span>\n\n./configure <span class=\"token parameter variable\">--prefix</span><span class=\"token operator\">=</span>/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module\n\n<span class=\"token comment\">## 如果没有报错，开始编译安装</span>\n<span class=\"token function\">make</span>\n\n<span class=\"token comment\">## make 这步可能会报错</span>\n<span class=\"token comment\">## ./configure: error: SSL modules require the OpenSSL library.</span>\n<span class=\"token comment\">## 再安装一些东西</span>\n<span class=\"token comment\">## yum -y install openssl openssl-devel</span>\n\n<span class=\"token comment\">## 安装</span>\n<span class=\"token function\">make</span> <span class=\"token function\">install</span>\n\n<span class=\"token comment\">## 启动nginx服务</span>\n<span class=\"token builtin class-name\">cd</span> /usr/local/nginx/sbin\n./nginx\n\n<span class=\"token comment\">## 先搞一个简单的服务吧</span>\n<span class=\"token comment\">## 在 home 文件夹下面搞</span>\n\n<span class=\"token builtin class-name\">cd</span> /home\n<span class=\"token function\">mkdir</span> wwwroot\n<span class=\"token builtin class-name\">cd</span> wwwroot\n<span class=\"token function\">mkdir</span> www.onlyling.com\n\n<span class=\"token comment\">## 把站点程序放到 `www.onlyling.com` 文件夹</span>\n<span class=\"token comment\">## 程序启动占用 3000 端口好</span>\n<span class=\"token comment\">## 静态资源目录 /home/wwwroot/www.onlyling.com/app/public</span>\n\n<span class=\"token comment\">## 修改 nginx.conf ，一般情况使用软连的方式，但还是不太懂，直接修改默认的配置</span>\n<span class=\"token builtin class-name\">cd</span> /usr/local/nginx/conf\n<span class=\"token function\">vi</span> nginx.conf\n\n<span class=\"token comment\">## 简单的配置一个 http 服务</span>\n<span class=\"token comment\">## 参考了 Thinkjs 线上部署使用 Nginx 的代码</span>\n<span class=\"token comment\">## https://thinkjs.org/zh-cn/doc/3.0/deploy.html</span>\nserver <span class=\"token punctuation\">{</span>\n\tlisten       <span class=\"token number\">80</span><span class=\"token punctuation\">;</span>\n\tserver_name  www.onlyling.com<span class=\"token punctuation\">;</span>\n\troot /home/wwwroot/www.onlyling.com/app/public<span class=\"token punctuation\">;</span>\n\n\t<span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$node_port</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n\tlocation / <span class=\"token punctuation\">{</span>\n\t    proxy_http_version <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n\t    proxy_set_header X-Real-IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span>\n\t    proxy_set_header X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span>\n\t    proxy_set_header Host <span class=\"token variable\">$http_host</span><span class=\"token punctuation\">;</span>\n\t    proxy_set_header X-NginX-Proxy <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\t    proxy_set_header Upgrade <span class=\"token variable\">$http_upgrade</span><span class=\"token punctuation\">;</span>\n\t    proxy_set_header Connection <span class=\"token string\">\"upgrade\"</span><span class=\"token punctuation\">;</span>\n\t    proxy_pass http://127.0.0.1:<span class=\"token variable\">$node_port</span><span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span>\n\t    proxy_redirect off<span class=\"token punctuation\">;</span>\n\t    root   html<span class=\"token punctuation\">;</span>\n\t    index  index.html index.htm<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">## 保存好后重启</span>\n<span class=\"token comment\">## 没有配置别名，嗯，有点长</span>\n/usr/local/nginx/sbin/nginx <span class=\"token parameter variable\">-s</span> reload\n\n<span class=\"token comment\">## www.onlyling.com 解析到服务器，应该就可以访问这个站点了</span>\n</code></pre></div>\n<h2>HTTPS 证书</h2>\n<p>这次证书是自己搞的，用的是 <code class=\"language-text\">acme.sh</code> <a href=\"https://github.com/Neilpang/acme.sh\">查看仓库</a>，可以实现每 60 天自动更新一次证书，很棒哦。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\">## 按照文档提示安装</span>\n<span class=\"token comment\">## 安装的时候会提示安装另一个服务器程序，我们用 Nginx 了，所以不需要</span>\n<span class=\"token function\">curl</span>  https://get.acme.sh <span class=\"token operator\">|</span> <span class=\"token function\">sh</span>\n\n<span class=\"token comment\">## 验证身份、生成证书</span>\n<span class=\"token comment\">## 验证身份其实就是在站点生成一个文件，通过域名访问文件，有就通过</span>\n<span class=\"token comment\">## 所以后面的目录指定到了站点的静态资源文件(反正我的程序里就把 public 设置成根目录)</span>\nacme.sh  <span class=\"token parameter variable\">--issue</span>  <span class=\"token parameter variable\">-d</span> www.onlyling <span class=\"token parameter variable\">--webroot</span>  /home/wwwroot/www.onlyling.com/app/public\n\n<span class=\"token comment\">## 等待一分钟左右吧</span>\n<span class=\"token comment\">## 生成了蛮多的文件</span>\n\n<span class=\"token comment\">## 复制证书</span>\n<span class=\"token comment\">## 可能会提示没有文件夹，手动按目录创建</span>\n<span class=\"token comment\">## 但是最后一步，我没有执行成功，就手动配置了</span>\n<span class=\"token comment\">## 证书已经复制到了 /etc/nginx/ssl 文件夹</span>\nacme.sh  <span class=\"token parameter variable\">--installcert</span>  <span class=\"token parameter variable\">-d</span>  <span class=\"token operator\">&lt;</span>domain<span class=\"token operator\">></span>.com   <span class=\"token punctuation\">\\</span>\n        --key-file   /etc/nginx/ssl/<span class=\"token operator\">&lt;</span>domain<span class=\"token operator\">></span>.key <span class=\"token punctuation\">\\</span>\n        --fullchain-file /etc/nginx/ssl/fullchain.cer <span class=\"token punctuation\">\\</span>\n        <span class=\"token parameter variable\">--reloadcmd</span>  <span class=\"token string\">\"service nginx force-reload\"</span></code></pre></div>\n<h2>手动配置 Nginx + HTTPS</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">cd</span> /usr/local/nginx/conf\n<span class=\"token function\">vi</span> nginx.conf\n\n<span class=\"token comment\">## 在刚刚配置 http 那里添加一个 https 服务</span>\nserver <span class=\"token punctuation\">{</span>\n    listen <span class=\"token number\">443</span> ssl<span class=\"token punctuation\">;</span>\n    server_name www.onlyling.com<span class=\"token punctuation\">;</span>\n    root /home/wwwroot/www.onlyling.com/app/public<span class=\"token punctuation\">;</span>\n    <span class=\"token builtin class-name\">set</span> <span class=\"token variable\">$node_port</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\n\n    ssl_certificate /etc/nginx/ssl/fullchain.cer<span class=\"token punctuation\">;</span>\n    ssl_certificate_key /etc/nginx/ssl/www.onlyling.com.key<span class=\"token punctuation\">;</span>\n\n    keepalive_timeout   <span class=\"token number\">70</span><span class=\"token punctuation\">;</span>\n    fastcgi_param   HTTPS               on<span class=\"token punctuation\">;</span>\n    fastcgi_param   HTTP_SCHEME         https<span class=\"token punctuation\">;</span>\n    server_tokens off<span class=\"token punctuation\">;</span>\n\n    location / <span class=\"token punctuation\">{</span>\n        proxy_http_version <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span>\n        proxy_set_header X-Real-IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span>\n        proxy_set_header X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span>\n        proxy_set_header Host <span class=\"token variable\">$http_host</span><span class=\"token punctuation\">;</span>\n        proxy_set_header X-NginX-Proxy <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        proxy_set_header Upgrade <span class=\"token variable\">$http_upgrade</span><span class=\"token punctuation\">;</span>\n        proxy_set_header Connection <span class=\"token string\">\"upgrade\"</span><span class=\"token punctuation\">;</span>\n        proxy_pass http://127.0.0.1:<span class=\"token variable\">$node_port</span><span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span>\n        proxy_redirect off<span class=\"token punctuation\">;</span>\n        root   html<span class=\"token punctuation\">;</span>\n        index  index.html index.htm<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">## 如果只想开启 https</span>\n<span class=\"token comment\">## 在 http 配置处添加</span>\n<span class=\"token comment\">## rewrite ^ https://$http_host$request_uri? permanent;</span>\n\n<span class=\"token comment\">## 重启 Nginx 服务</span>\n<span class=\"token comment\">## 大概、应该、可能就搞定了</span>\n<span class=\"token comment\">## 唯一不确定的是 acme.sh 能否自动更新，毕竟没有按照它的步骤走下去</span></code></pre></div>","frontmatter":{"title":"从零开始配置 Nginx + HTTPS","date":"2021-11-03","description":null,"author":"onlyling"}},"previous":{"fields":{"slug":"/frontEnd/其他/Verdaccio 搭建私有 NPM/"},"frontmatter":{"title":"Verdaccio 搭建私有 NPM"}},"next":{"fields":{"slug":"/frontEnd/其他/在项目中使用 husky/"},"frontmatter":{"title":"Git 项目中使用 husky"}}},"pageContext":{"id":"1c0b1030-0bb2-5770-a4d4-d8d708c8e667","previousPostId":"1a9b890e-4472-5aa2-99ad-e6ab4a09dfee","nextPostId":"8452f8be-88a2-57d5-8ca5-f3d5a5dac7de"}},"staticQueryHashes":["2841359383","3257411868"]}